{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raito/Documents/GitHub/twitch-task-bot-next/criss_bot/src/components/tasks/TaskItem.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Task } from \"@/types\";\r\n\r\ninterface TaskItemProps {\r\n  task: Task;\r\n  index?: number;\r\n  className?: string;\r\n}\r\n\r\nexport const TaskItem: React.FC<TaskItemProps> = ({\r\n  task,\r\n  index = 0,\r\n  className = \"\",\r\n}) => {\r\n  const formatTime = (timestamp: string) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  };\r\n\r\n  const isPending = task.status === \"pending\";\r\n  const isCompleted = task.status === \"done\";\r\n\r\n  return (\r\n    <div\r\n      className={`\r\n        flex justify-between items-center p-4 rounded-2xl transition-all duration-500 ease-out\r\n        border-2 animate-fade-in-up\r\n        ${\r\n          isPending\r\n            ? \"bg-gradient-to-r from-purple-500/20 to-purple-600/10 border-purple-500/30 hover:border-purple-400/50\"\r\n            : \"bg-gradient-to-r from-green-500/20 to-green-600/10 border-green-500/30 hover:border-green-400/50 opacity-80\"\r\n        }\r\n        hover:transform hover:-translate-y-1 hover:scale-[1.02] hover:shadow-lg\r\n        ${className}\r\n      `}\r\n      style={{\r\n        animationDelay: `${index * 0.1}s`,\r\n      }}>\r\n      <div className=\"flex-1 min-w-0\">\r\n        <div\r\n          className={`\r\n          font-semibold mb-2 text-white leading-tight\r\n          ${isCompleted ? \"line-through opacity-80\" : \"\"}\r\n        `}>\r\n          {task.text}\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-3 flex-wrap\">\r\n          <span\r\n            className=\"\r\n            text-purple-400 font-bold text-sm bg-purple-500/10 px-2 py-1 rounded-lg\r\n            border border-purple-500/20\r\n          \">\r\n            @{task.username}\r\n          </span>\r\n\r\n          <span\r\n            className=\"\r\n            text-white/60 text-xs bg-white/5 px-2 py-1 rounded-md\r\n            border border-white/10\r\n          \">\r\n            #{task.id.replace(\"task_\", \"\")}\r\n          </span>\r\n\r\n          <span className=\"text-white/50 text-xs\">\r\n            {formatTime(task.createdAt)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"ml-4 flex-shrink-0\">\r\n        <div\r\n          className={`\r\n          w-4 h-4 rounded-full flex items-center justify-center text-xs font-bold\r\n          border-2 border-white/20\r\n          ${\r\n            isPending\r\n              ? \"bg-gradient-to-r from-purple-500 to-purple-600 animate-pulse shadow-purple-500/50 shadow-lg\"\r\n              : \"bg-gradient-to-r from-green-500 to-green-600 shadow-green-500/50 shadow-lg\"\r\n          }\r\n        `}>\r\n          {isCompleted && <span className=\"text-white text-[10px]\">✓</span>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;;AASO,MAAM,WAAoC,CAAC,EAChD,IAAI,EACJ,QAAQ,CAAC,EACT,YAAY,EAAE,EACf;IACC,MAAM,aAAa,CAAC;QAClB,MAAM,OAAO,IAAI,KAAK;QACtB,OAAO,KAAK,kBAAkB,CAAC,SAAS;YACtC,MAAM;YACN,QAAQ;QACV;IACF;IAEA,MAAM,YAAY,KAAK,MAAM,KAAK;IAClC,MAAM,cAAc,KAAK,MAAM,KAAK;IAEpC,qBACE,8OAAC;QACC,WAAW,CAAC;;;QAGV,EACE,YACI,yGACA,8GACL;;QAED,EAAE,UAAU;MACd,CAAC;QACD,OAAO;YACL,gBAAgB,GAAG,QAAQ,IAAI,CAAC,CAAC;QACnC;;0BACA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,WAAW,CAAC;;UAEZ,EAAE,cAAc,4BAA4B,GAAG;QACjD,CAAC;kCACE,KAAK,IAAI;;;;;;kCAGZ,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,WAAU;;oCAGV;oCACE,KAAK,QAAQ;;;;;;;0CAGjB,8OAAC;gCACC,WAAU;;oCAGV;oCACE,KAAK,EAAE,CAAC,OAAO,CAAC,SAAS;;;;;;;0CAG7B,8OAAC;gCAAK,WAAU;0CACb,WAAW,KAAK,SAAS;;;;;;;;;;;;;;;;;;0BAKhC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,WAAW,CAAC;;;UAGZ,EACE,YACI,gGACA,6EACL;QACH,CAAC;8BACE,6BAAe,8OAAC;wBAAK,WAAU;kCAAyB;;;;;;;;;;;;;;;;;;;;;;AAKnE","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raito/Documents/GitHub/twitch-task-bot-next/criss_bot/src/components/tasks/TaskList.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Task } from \"@/types\";\r\nimport { TaskItem } from \"./TaskItem\";\r\n\r\ninterface TaskListProps {\r\n  tasks: Task[];\r\n  maxVisible?: number;\r\n  autoScrollInterval?: number;\r\n}\r\n\r\nexport const TaskList: React.FC<TaskListProps> = ({\r\n  tasks,\r\n  maxVisible = 2, // Changed to 2 for vertical scrolling\r\n  autoScrollInterval = 3000, // Faster scrolling for vertical\r\n}) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isScrolling, setIsScrolling] = useState(false);\r\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const pendingTasks = tasks.filter((task) => task.status === \"pending\");\r\n  const shouldScroll = pendingTasks.length > maxVisible;\r\n  const totalItems = pendingTasks.length;\r\n\r\n  // Auto-scroll effect - vertical scrolling\r\n  useEffect(() => {\r\n    if (!shouldScroll) {\r\n      setCurrentIndex(0);\r\n      setIsScrolling(false);\r\n      return;\r\n    }\r\n\r\n    setIsScrolling(true);\r\n\r\n    const interval = setInterval(() => {\r\n      setCurrentIndex((prev) => {\r\n        const nextIndex = (prev + 1) % totalItems;\r\n        return nextIndex;\r\n      });\r\n    }, autoScrollInterval);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [shouldScroll, totalItems, autoScrollInterval]);\r\n\r\n  // Smooth scroll animation\r\n  useEffect(() => {\r\n    if (scrollContainerRef.current && shouldScroll) {\r\n      const container = scrollContainerRef.current;\r\n      const itemHeight = 80; // Approximate height of each task item\r\n      const scrollTop = currentIndex * itemHeight;\r\n\r\n      container.scrollTo({\r\n        top: scrollTop,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  }, [currentIndex, shouldScroll]);\r\n\r\n  if (pendingTasks.length === 0) {\r\n    return (\r\n      <div className=\"text-center py-8 px-6 bg-gradient-to-r from-purple-500/10 to-purple-600/5 rounded-2xl border-2 border-dashed border-purple-500/30\">\r\n        <div className=\"text-white font-semibold text-lg mb-2\">\r\n          No pending tasks\r\n        </div>\r\n        <div className=\"text-purple-400 text-sm\">\r\n          Type{\" \"}\r\n          <code className=\"bg-purple-500/20 px-2 py-1 rounded\">\r\n            !add [task]\r\n          </code>{\" \"}\r\n          in chat to add one!\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* Scroll indicator */}\r\n      {shouldScroll && (\r\n        <div className=\"flex justify-between items-center p-3 bg-purple-500/10 rounded-xl border border-purple-500/20\">\r\n          <span className=\"text-purple-400 text-sm font-medium\">\r\n            Showing {Math.min(maxVisible, pendingTasks.length)} of{\" \"}\r\n            {pendingTasks.length} tasks\r\n            <span className=\"text-green-400 ml-2 animate-pulse\">\r\n              • Auto-scrolling\r\n            </span>\r\n          </span>\r\n\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className=\"text-xs text-white/60\">\r\n              {currentIndex + 1}/{totalItems}\r\n            </div>\r\n            <div className=\"flex flex-col gap-1\">\r\n              {Array.from({ length: Math.min(5, totalItems) }, (_, i) => (\r\n                <div\r\n                  key={i}\r\n                  className={`\r\n                    w-2 h-1 rounded-full transition-all duration-300\r\n                    ${\r\n                      i === currentIndex % Math.min(5, totalItems)\r\n                        ? \"bg-purple-500 shadow-lg shadow-purple-500/50\"\r\n                        : \"bg-purple-500/30\"\r\n                    }\r\n                  `}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Task list container */}\r\n      <div\r\n        className={`\r\n        relative transition-all duration-500\r\n        ${shouldScroll ? \"overflow-hidden\" : \"\"}\r\n      `}>\r\n        {/* Scrolling container */}\r\n        <div\r\n          ref={scrollContainerRef}\r\n          className={`\r\n            space-y-3 transition-all duration-500\r\n            ${\r\n              shouldScroll\r\n                ? `h-[${maxVisible * 80}px] overflow-hidden relative`\r\n                : \"min-h-[160px]\"\r\n            }\r\n          `}\r\n          style={{\r\n            height: shouldScroll ? `${maxVisible * 80}px` : \"auto\",\r\n          }}>\r\n          {/* Scrolling effect overlay */}\r\n          {shouldScroll && isScrolling && (\r\n            <>\r\n              <div className=\"absolute top-0 left-0 right-0 h-8 bg-gradient-to-b from-gray-900/50 to-transparent z-10 pointer-events-none\" />\r\n              <div className=\"absolute bottom-0 left-0 right-0 h-8 bg-gradient-to-t from-gray-900/50 to-transparent z-10 pointer-events-none\" />\r\n              <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-purple-500/5 to-transparent animate-pulse z-5 pointer-events-none\" />\r\n            </>\r\n          )}\r\n\r\n          {/* All tasks rendered */}\r\n          <div className=\"space-y-3\">\r\n            {pendingTasks.map((task, index) => (\r\n              <TaskItem\r\n                key={task.id}\r\n                task={task}\r\n                index={index}\r\n                className={`\r\n                  transform transition-all duration-500\r\n                  ${shouldScroll && isScrolling ? \"hover:scale-105\" : \"\"}\r\n                `}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Scroll progress indicator */}\r\n        {shouldScroll && (\r\n          <div className=\"mt-3\">\r\n            <div className=\"w-full bg-black/20 rounded-full h-1 overflow-hidden\">\r\n              <div\r\n                className=\"h-full bg-gradient-to-r from-purple-500 to-purple-600 rounded-full transition-all duration-500\"\r\n                style={{\r\n                  width: `${((currentIndex + 1) / totalItems) * 100}%`,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Manual scroll controls (optional) */}\r\n      {shouldScroll && (\r\n        <div className=\"flex justify-center gap-2 mt-3\">\r\n          <button\r\n            onClick={() =>\r\n              setCurrentIndex((prev) => (prev > 0 ? prev - 1 : totalItems - 1))\r\n            }\r\n            className=\"bg-purple-500/20 hover:bg-purple-500/30 text-purple-400 hover:text-purple-300 p-2 rounded-lg transition-all duration-200 border border-purple-500/30\"\r\n            title=\"Previous task\">\r\n            ⬆️\r\n          </button>\r\n          <button\r\n            onClick={() => setCurrentIndex((prev) => (prev + 1) % totalItems)}\r\n            className=\"bg-purple-500/20 hover:bg-purple-500/30 text-purple-400 hover:text-purple-300 p-2 rounded-lg transition-all duration-200 border border-purple-500/30\"\r\n            title=\"Next task\">\r\n            ⬇️\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAQO,MAAM,WAAoC,CAAC,EAChD,KAAK,EACL,aAAa,CAAC,EACd,qBAAqB,IAAI,EAC1B;IACC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,qBAAqB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAElD,MAAM,eAAe,MAAM,MAAM,CAAC,CAAC,OAAS,KAAK,MAAM,KAAK;IAC5D,MAAM,eAAe,aAAa,MAAM,GAAG;IAC3C,MAAM,aAAa,aAAa,MAAM;IAEtC,0CAA0C;IAC1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,cAAc;YACjB,gBAAgB;YAChB,eAAe;YACf;QACF;QAEA,eAAe;QAEf,MAAM,WAAW,YAAY;YAC3B,gBAAgB,CAAC;gBACf,MAAM,YAAY,CAAC,OAAO,CAAC,IAAI;gBAC/B,OAAO;YACT;QACF,GAAG;QAEH,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;QAAc;QAAY;KAAmB;IAEjD,0BAA0B;IAC1B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,mBAAmB,OAAO,IAAI,cAAc;YAC9C,MAAM,YAAY,mBAAmB,OAAO;YAC5C,MAAM,aAAa,IAAI,uCAAuC;YAC9D,MAAM,YAAY,eAAe;YAEjC,UAAU,QAAQ,CAAC;gBACjB,KAAK;gBACL,UAAU;YACZ;QACF;IACF,GAAG;QAAC;QAAc;KAAa;IAE/B,IAAI,aAAa,MAAM,KAAK,GAAG;QAC7B,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BAAwC;;;;;;8BAGvD,8OAAC;oBAAI,WAAU;;wBAA0B;wBAClC;sCACL,8OAAC;4BAAK,WAAU;sCAAqC;;;;;;wBAE7C;wBAAI;;;;;;;;;;;;;IAKpB;IAEA,qBACE,8OAAC;QAAI,WAAU;;YAEZ,8BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;;4BAAsC;4BAC3C,KAAK,GAAG,CAAC,YAAY,aAAa,MAAM;4BAAE;4BAAI;4BACtD,aAAa,MAAM;4BAAC;0CACrB,8OAAC;gCAAK,WAAU;0CAAoC;;;;;;;;;;;;kCAKtD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;oCACZ,eAAe;oCAAE;oCAAE;;;;;;;0CAEtB,8OAAC;gCAAI,WAAU;0CACZ,MAAM,IAAI,CAAC;oCAAE,QAAQ,KAAK,GAAG,CAAC,GAAG;gCAAY,GAAG,CAAC,GAAG,kBACnD,8OAAC;wCAEC,WAAW,CAAC;;oBAEV,EACE,MAAM,eAAe,KAAK,GAAG,CAAC,GAAG,cAC7B,iDACA,mBACL;kBACH,CAAC;uCARI;;;;;;;;;;;;;;;;;;;;;;0BAiBjB,8OAAC;gBACC,WAAW,CAAC;;QAEZ,EAAE,eAAe,oBAAoB,GAAG;MAC1C,CAAC;;kCAEC,8OAAC;wBACC,KAAK;wBACL,WAAW,CAAC;;YAEV,EACE,eACI,CAAC,GAAG,EAAE,aAAa,GAAG,4BAA4B,CAAC,GACnD,gBACL;UACH,CAAC;wBACD,OAAO;4BACL,QAAQ,eAAe,GAAG,aAAa,GAAG,EAAE,CAAC,GAAG;wBAClD;;4BAEC,gBAAgB,6BACf;;kDACE,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAI,WAAU;;;;;;;;0CAKnB,8OAAC;gCAAI,WAAU;0CACZ,aAAa,GAAG,CAAC,CAAC,MAAM,sBACvB,8OAAC,uIAAA,CAAA,WAAQ;wCAEP,MAAM;wCACN,OAAO;wCACP,WAAW,CAAC;;kBAEV,EAAE,gBAAgB,cAAc,oBAAoB,GAAG;gBACzD,CAAC;uCANI,KAAK,EAAE;;;;;;;;;;;;;;;;oBAanB,8BACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCACC,WAAU;gCACV,OAAO;oCACL,OAAO,GAAG,AAAC,CAAC,eAAe,CAAC,IAAI,aAAc,IAAI,CAAC,CAAC;gCACtD;;;;;;;;;;;;;;;;;;;;;;YAQT,8BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,SAAS,IACP,gBAAgB,CAAC,OAAU,OAAO,IAAI,OAAO,IAAI,aAAa;wBAEhE,WAAU;wBACV,OAAM;kCAAgB;;;;;;kCAGxB,8OAAC;wBACC,SAAS,IAAM,gBAAgB,CAAC,OAAS,CAAC,OAAO,CAAC,IAAI;wBACtD,WAAU;wBACV,OAAM;kCAAY;;;;;;;;;;;;;;;;;;AAO9B","debugId":null}},
    {"offset": {"line": 558, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raito/Documents/GitHub/twitch-task-bot-next/criss_bot/src/components/pomodoro/PomodoroTimer.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io, Socket } from \"socket.io-client\";\r\n\r\ninterface PomodoroSession {\r\n  timeLeft: number;\r\n  isActive: boolean;\r\n  mode: \"work\" | \"shortBreak\" | \"longBreak\";\r\n  session: number;\r\n  initiatedBy: string | null;\r\n  nextBreakType: \"short\" | \"long\";\r\n}\r\n\r\ninterface PomodoroTimerProps {\r\n  className?: string;\r\n}\r\n\r\nexport function PomodoroTimer({ className }: PomodoroTimerProps) {\r\n  const [pomodoroData, setPomodoroData] = useState<PomodoroSession>({\r\n    timeLeft: 1500, // 25 minutes default\r\n    isActive: false,\r\n    mode: \"work\",\r\n    session: 1,\r\n    initiatedBy: null,\r\n    nextBreakType: \"short\",\r\n  });\r\n\r\n  const [socket, setSocket] = useState<Socket | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize socket connection\r\n    const newSocket = io(\"http://localhost:3001\");\r\n    setSocket(newSocket);\r\n\r\n    // Listen for Pomodoro updates\r\n    newSocket.on(\"pomodoroUpdate\", (data: PomodoroSession) => {\r\n      setPomodoroData(data);\r\n    });\r\n\r\n    // Fetch initial data\r\n    fetchPomodoroStatus();\r\n\r\n    // Set up interval to fetch status every second for real-time updates\r\n    const interval = setInterval(() => {\r\n      fetchPomodoroStatus();\r\n    }, 1000);\r\n\r\n    return () => {\r\n      newSocket.close();\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  const fetchPomodoroStatus = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/pomodoro\");\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setPomodoroData(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Pomodoro status:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAction = async (\r\n    action: \"start\" | \"pause\" | \"resume\" | \"reset\"\r\n  ) => {\r\n    try {\r\n      if (action === \"start\") {\r\n        const response = await fetch(\"/api/pomodoro\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ username: \"overlay-user\", duration: 25 }),\r\n        });\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setPomodoroData(data.data);\r\n        }\r\n      } else {\r\n        const response = await fetch(\"/api/pomodoro/control\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ username: \"overlay-user\", action }),\r\n        });\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setPomodoroData(data.data);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error ${action} Pomodoro:`, error);\r\n    }\r\n  };\r\n\r\n  // Format time as MM:SS with seconds\r\n  const formatTime = (totalSeconds: number): string => {\r\n    const minutes = Math.floor(totalSeconds / 60);\r\n    const seconds = totalSeconds % 60;\r\n    return `${minutes}:${seconds.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  // Get progress percentage\r\n  const getProgress = (): number => {\r\n    const totalTime =\r\n      pomodoroData.mode === \"work\"\r\n        ? 25 * 60 // 25 minutes\r\n        : pomodoroData.mode === \"shortBreak\"\r\n        ? 10 * 60 // 10 minutes\r\n        : 15 * 60; // 15 minutes for long break\r\n\r\n    return ((totalTime - pomodoroData.timeLeft) / totalTime) * 100;\r\n  };\r\n\r\n  // Get theme colors based on mode\r\n  const getThemeColors = () => {\r\n    switch (pomodoroData.mode) {\r\n      case \"work\":\r\n        return {\r\n          primary: \"#8a2be2\",\r\n          background: \"rgba(138, 43, 226, 0.1)\",\r\n          text: \"#8a2be2\",\r\n          emoji: \"🍅\",\r\n        };\r\n      case \"shortBreak\":\r\n        return {\r\n          primary: \"#00ff88\",\r\n          background: \"rgba(0, 255, 136, 0.1)\",\r\n          text: \"#00ff88\",\r\n          emoji: \"☕\",\r\n        };\r\n      case \"longBreak\":\r\n        return {\r\n          primary: \"#ff6b35\",\r\n          background: \"rgba(255, 107, 53, 0.1)\",\r\n          text: \"#ff6b35\",\r\n          emoji: \"🛋️\",\r\n        };\r\n      default:\r\n        return {\r\n          primary: \"#8a2be2\",\r\n          background: \"rgba(138, 43, 226, 0.1)\",\r\n          text: \"#8a2be2\",\r\n          emoji: \"🍅\",\r\n        };\r\n    }\r\n  };\r\n\r\n  const theme = getThemeColors();\r\n  const progress = getProgress();\r\n\r\n  return (\r\n    <div className={`pomodoro-timer ${className}`}>\r\n      <div\r\n        className=\"pomodoro-container\"\r\n        style={{\r\n          background: theme.background,\r\n          border: `2px solid ${theme.primary}`,\r\n          borderRadius: \"15px\",\r\n          padding: \"20px\",\r\n          textAlign: \"center\",\r\n          position: \"relative\",\r\n          overflow: \"hidden\",\r\n        }}>\r\n        {/* Animated background glow */}\r\n        <div\r\n          className=\"pomodoro-glow\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            background: `linear-gradient(45deg, ${theme.primary}20, transparent, ${theme.primary}20)`,\r\n            animation: \"pulse 2s ease-in-out infinite\",\r\n            borderRadius: \"13px\",\r\n          }}\r\n        />\r\n\r\n        {/* Content */}\r\n        <div style={{ position: \"relative\", zIndex: 2 }}>\r\n          {/* Mode and Session */}\r\n          <div\r\n            className=\"pomodoro-header\"\r\n            style={{\r\n              color: theme.text,\r\n              fontSize: \"14px\",\r\n              fontWeight: \"bold\",\r\n              marginBottom: \"10px\",\r\n            }}>\r\n            {theme.emoji}{\" \"}\r\n            {pomodoroData.mode === \"work\"\r\n              ? `Work Session ${pomodoroData.session}`\r\n              : pomodoroData.mode === \"shortBreak\"\r\n              ? \"Short Break\"\r\n              : \"Long Break\"}\r\n          </div>\r\n\r\n          {/* Time Display with Seconds */}\r\n          <div\r\n            className=\"pomodoro-time\"\r\n            style={{\r\n              fontSize: \"28px\",\r\n              fontWeight: \"bold\",\r\n              color: theme.text,\r\n              fontFamily: \"monospace\",\r\n              marginBottom: \"15px\",\r\n              textShadow: `0 0 10px ${theme.primary}50`,\r\n            }}>\r\n            {formatTime(pomodoroData.timeLeft)}\r\n          </div>\r\n\r\n          {/* Progress Bar */}\r\n          <div\r\n            className=\"pomodoro-progress-container\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"8px\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n              borderRadius: \"4px\",\r\n              marginBottom: \"15px\",\r\n              overflow: \"hidden\",\r\n            }}>\r\n            <div\r\n              className=\"pomodoro-progress-bar\"\r\n              style={{\r\n                width: `${progress}%`,\r\n                height: \"100%\",\r\n                background: `linear-gradient(90deg, ${theme.primary}, ${theme.primary}80)`,\r\n                borderRadius: \"4px\",\r\n                transition: \"width 1s ease\",\r\n                boxShadow: `0 0 10px ${theme.primary}60`,\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {/* Controls */}\r\n          <div\r\n            className=\"pomodoro-controls\"\r\n            style={{ display: \"flex\", gap: \"10px\", justifyContent: \"center\" }}>\r\n            {!pomodoroData.isActive ? (\r\n              <button\r\n                onClick={() => handleAction(\"start\")}\r\n                style={{\r\n                  background: theme.primary,\r\n                  color: \"white\",\r\n                  border: \"none\",\r\n                  padding: \"8px 15px\",\r\n                  borderRadius: \"5px\",\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"12px\",\r\n                  fontWeight: \"bold\",\r\n                }}>\r\n                🚀 Start\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={() => handleAction(\"pause\")}\r\n                style={{\r\n                  background: \"#ff6b35\",\r\n                  color: \"white\",\r\n                  border: \"none\",\r\n                  padding: \"8px 15px\",\r\n                  borderRadius: \"5px\",\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"12px\",\r\n                  fontWeight: \"bold\",\r\n                }}>\r\n                ⏸️ Pause\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              onClick={() => handleAction(\"reset\")}\r\n              style={{\r\n                background: \"#6c757d\",\r\n                color: \"white\",\r\n                border: \"none\",\r\n                padding: \"8px 15px\",\r\n                borderRadius: \"5px\",\r\n                cursor: \"pointer\",\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n              }}>\r\n              🔄 Reset\r\n            </button>\r\n          </div>\r\n\r\n          {/* Status Text */}\r\n          {pomodoroData.isActive && (\r\n            <div\r\n              className=\"pomodoro-status\"\r\n              style={{\r\n                fontSize: \"11px\",\r\n                color: theme.text,\r\n                marginTop: \"10px\",\r\n                opacity: 0.8,\r\n              }}>\r\n              {pomodoroData.mode === \"work\"\r\n                ? `Next: ${\r\n                    pomodoroData.nextBreakType === \"short\" ? \"10-min\" : \"15-min\"\r\n                  } break`\r\n                : `Next: Work session ${pomodoroData.session + 1}`}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        @keyframes pulse {\r\n          0%,\r\n          100% {\r\n            opacity: 0.3;\r\n          }\r\n          50% {\r\n            opacity: 0.7;\r\n          }\r\n        }\r\n\r\n        .pomodoro-timer button:hover {\r\n          transform: translateY(-1px);\r\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n        }\r\n\r\n        .pomodoro-timer button:active {\r\n          transform: translateY(0);\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 909, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raito/Documents/GitHub/twitch-task-bot-next/criss_bot/src/components/TaskDisplay.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport {\r\n  Task,\r\n  PomodoroState,\r\n  ServerToClientEvents,\r\n  ClientToServerEvents,\r\n} from \"@/types\";\r\nimport { TaskList } from \"./tasks/TaskList\";\r\nimport { TaskItem } from \"./tasks/TaskItem\";\r\nimport { PomodoroTimer } from \"./pomodoro/PomodoroTimer\";\r\n\r\nexport const TaskDisplay: React.FC = () => {\r\n  // State management\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [pomodoroState, setPomodoroState] = useState<PomodoroState>({\r\n    isActive: false,\r\n    timeLeft: 25 * 60,\r\n    mode: \"work\",\r\n    session: 1,\r\n    startTime: null,\r\n    initiatedBy: null,\r\n    autoBreaks: true,\r\n  });\r\n  const [socket, setSocket] = useState<Socket<\r\n    ServerToClientEvents,\r\n    ClientToServerEvents\r\n  > | null>(null);\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [showCompleted, setShowCompleted] = useState(true);\r\n  const [connectionStatus, setConnectionStatus] = useState<\r\n    \"connecting\" | \"connected\" | \"disconnected\"\r\n  >(\"connecting\");\r\n\r\n  // Initialize socket connection\r\n  useEffect(() => {\r\n    const newSocket = io(\"http://localhost:3001\", {\r\n      path: \"/socket.io\",\r\n      transports: [\"websocket\", \"polling\"],\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    // Connection event handlers\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"✅ Connected to server\");\r\n      setConnectionStatus(\"connected\");\r\n    });\r\n\r\n    newSocket.on(\"disconnect\", () => {\r\n      console.log(\"❌ Disconnected from server\");\r\n      setConnectionStatus(\"disconnected\");\r\n    });\r\n\r\n    // Task event handlers\r\n    newSocket.on(\"tasksLoaded\", (loadedTasks) => {\r\n      setTasks(loadedTasks);\r\n    });\r\n\r\n    newSocket.on(\"taskAdded\", (newTask) => {\r\n      setTasks((prev) => [...prev, newTask]);\r\n    });\r\n\r\n    newSocket.on(\"taskUpdated\", (updatedTask) => {\r\n      setTasks((prev) =>\r\n        prev.map((task) => (task.id === updatedTask.id ? updatedTask : task))\r\n      );\r\n    });\r\n\r\n    newSocket.on(\"taskCompleted\", (completedTask) => {\r\n      setTasks((prev) =>\r\n        prev.map((task) =>\r\n          task.id === completedTask.id ? completedTask : task\r\n        )\r\n      );\r\n    });\r\n\r\n    newSocket.on(\"taskDeleted\", (deletedTask) => {\r\n      setTasks((prev) => prev.filter((task) => task.id !== deletedTask.id));\r\n    });\r\n\r\n    newSocket.on(\"completedTasksCleared\", (clearedTasks) => {\r\n      setTasks((prev) => prev.filter((task) => task.status !== \"done\"));\r\n    });\r\n\r\n    // Pomodoro event handlers\r\n    newSocket.on(\"pomodoroStateLoaded\", (state) => {\r\n      setPomodoroState(state);\r\n    });\r\n\r\n    newSocket.on(\"pomodoroStarted\", (state) => {\r\n      setPomodoroState(state);\r\n    });\r\n\r\n    newSocket.on(\"pomodoroPaused\", (state) => {\r\n      setPomodoroState(state);\r\n    });\r\n\r\n    newSocket.on(\"pomodoroResumed\", (state) => {\r\n      setPomodoroState(state);\r\n    });\r\n\r\n    newSocket.on(\"pomodoroReset\", (state) => {\r\n      setPomodoroState(state);\r\n    });\r\n\r\n    newSocket.on(\"pomodoroTick\", (state) => {\r\n      setPomodoroState(state);\r\n    });\r\n\r\n    newSocket.on(\"pomodoroWorkCompleted\", (data) => {\r\n      setPomodoroState(data.pomodoro);\r\n      console.log(\"🎉 Work completed:\", data.message);\r\n    });\r\n\r\n    newSocket.on(\"pomodoroBreakCompleted\", (data) => {\r\n      setPomodoroState(data.pomodoro);\r\n      console.log(\"✨ Break completed:\", data.message);\r\n    });\r\n\r\n    // Load initial data\r\n    loadInitialData();\r\n\r\n    return () => {\r\n      newSocket.close();\r\n    };\r\n  }, []);\r\n\r\n  const loadInitialData = async () => {\r\n    try {\r\n      // Load tasks\r\n      const tasksResponse = await fetch(\"/api/tasks\");\r\n      if (tasksResponse.ok) {\r\n        const tasksData = await tasksResponse.json();\r\n        if (tasksData.success) {\r\n          setTasks(tasksData.data);\r\n        }\r\n      }\r\n\r\n      // Load pomodoro state\r\n      const pomodoroResponse = await fetch(\"/api/pomodoro\");\r\n      if (pomodoroResponse.ok) {\r\n        const pomodoroData = await pomodoroResponse.json();\r\n        if (pomodoroData.success) {\r\n          setPomodoroState(pomodoroData.data);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to load initial data:\", error);\r\n    }\r\n  };\r\n\r\n  // Pomodoro control functions\r\n  const handlePomodoroStart = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/pomodoro\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username: \"overlay\", duration: 25 }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.error(\"Failed to start pomodoro\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error starting pomodoro:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePomodoroControl = async (\r\n    action: \"pause\" | \"resume\" | \"reset\"\r\n  ) => {\r\n    try {\r\n      const response = await fetch(\"/api/pomodoro/control\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username: \"overlay\", action }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.error(`Failed to ${action} pomodoro`);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error ${action} pomodoro:`, error);\r\n    }\r\n  };\r\n\r\n  const pendingTasks = tasks.filter((task) => task.status === \"pending\");\r\n  const completedTasks = tasks.filter((task) => task.status === \"done\");\r\n\r\n  return (\r\n    <div className=\"fixed top-5 right-5 w-[480px] max-h-[90vh] z-50\">\r\n      <div\r\n        className=\"\r\n        bg-gradient-to-br from-gray-900/95 to-black/95 backdrop-blur-lg\r\n        rounded-3xl border-2 border-purple-500/40 shadow-2xl shadow-purple-500/20\r\n        overflow-hidden animate-fade-in\r\n      \">\r\n        {/* Header */}\r\n        <div\r\n          className=\"\r\n          bg-gradient-to-r from-purple-600 to-purple-700 p-4\r\n          flex justify-between items-center border-b border-purple-500/30\r\n        \">\r\n          <div className=\"flex items-center gap-3\">\r\n            <span className=\"text-2xl\">📋</span>\r\n            <div>\r\n              <h2 className=\"text-white font-bold text-lg\">Criss Bot</h2>\r\n              <div className=\"flex items-center gap-4 text-sm\">\r\n                <span className=\"text-purple-200\">\r\n                  {pendingTasks.length} pending\r\n                </span>\r\n                {completedTasks.length > 0 && (\r\n                  <span className=\"text-green-200\">\r\n                    {completedTasks.length} done\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-2\">\r\n            {/* Connection status */}\r\n            <div\r\n              className={`\r\n              w-3 h-3 rounded-full\r\n              ${\r\n                connectionStatus === \"connected\"\r\n                  ? \"bg-green-400 animate-pulse\"\r\n                  : connectionStatus === \"connecting\"\r\n                  ? \"bg-yellow-400 animate-pulse\"\r\n                  : \"bg-red-400\"\r\n              }\r\n            `}\r\n              title={`Connection: ${connectionStatus}`}\r\n            />\r\n\r\n            <button\r\n              onClick={() => setShowCompleted(!showCompleted)}\r\n              className=\"text-white/80 hover:text-white p-2 rounded-lg hover:bg-white/10 transition-colors\"\r\n              title={showCompleted ? \"Hide completed\" : \"Show completed\"}>\r\n              {showCompleted ? \"👁️\" : \"👁️‍🗨️\"}\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => setIsMinimized(!isMinimized)}\r\n              className=\"text-white/80 hover:text-white p-2 rounded-lg hover:bg-white/10 transition-colors\"\r\n              title={isMinimized ? \"Expand\" : \"Minimize\"}>\r\n              {isMinimized ? \"⬆️\" : \"⬇️\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        {!isMinimized && (\r\n          <div className=\"p-5 space-y-6 max-h-[70vh] overflow-y-auto\">\r\n            {/* Pomodoro Timer */}\r\n            <PomodoroTimer\r\n              state={pomodoroState}\r\n              onStart={handlePomodoroStart}\r\n              onPause={() => handlePomodoroControl(\"pause\")}\r\n              onResume={() => handlePomodoroControl(\"resume\")}\r\n              onReset={() => handlePomodoroControl(\"reset\")}\r\n            />\r\n\r\n            {/* Tasks Section */}\r\n            <div>\r\n              <h3 className=\"text-white font-semibold text-lg mb-4 flex items-center gap-2\">\r\n                🔄 Active Tasks\r\n              </h3>\r\n              <TaskList tasks={pendingTasks} />\r\n            </div>\r\n\r\n            {/* Completed Tasks */}\r\n            {completedTasks.length > 0 && showCompleted && (\r\n              <div>\r\n                <div className=\"h-px bg-gradient-to-r from-transparent via-purple-500/30 to-transparent mb-4\" />\r\n                <h3 className=\"text-white/80 font-semibold text-lg mb-4 flex items-center gap-2\">\r\n                  ✅ Recently Completed\r\n                </h3>\r\n                <div className=\"space-y-2 opacity-80\">\r\n                  {completedTasks.slice(-3).map((task, index) => (\r\n                    <div key={task.id} className=\"text-sm\">\r\n                      <TaskItem task={task} index={index} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Commands Footer */}\r\n            <div\r\n              className=\"\r\n              bg-purple-500/10 border border-purple-500/20 rounded-xl p-4\r\n              text-center\r\n            \">\r\n              <h4 className=\"text-purple-400 font-semibold mb-2\">\r\n                💬 Chat Commands\r\n              </h4>\r\n              <div className=\"flex flex-wrap justify-center gap-2 text-xs\">\r\n                {[\r\n                  \"!add [task]\",\r\n                  \"!edit [id]\",\r\n                  \"!done [id]\",\r\n                  \"!pomodoro [min]\",\r\n                  \"!pause\",\r\n                  \"!reset\",\r\n                ].map((cmd) => (\r\n                  <code\r\n                    key={cmd}\r\n                    className=\"\r\n                    bg-purple-500/20 text-purple-300 px-2 py-1 rounded\r\n                    border border-purple-500/30\r\n                  \">\r\n                    {cmd}\r\n                  </code>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1340, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raito/Documents/GitHub/twitch-task-bot-next/criss_bot/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { TaskDisplay } from \"@/components/TaskDisplay\";\n\n// Fixed particles to avoid hydration mismatch\nconst FIXED_PARTICLES = [\n  { left: \"15%\", top: \"20%\", delay: \"0s\", duration: \"4s\" },\n  { left: \"85%\", top: \"60%\", delay: \"1s\", duration: \"3.5s\" },\n  { left: \"45%\", top: \"10%\", delay: \"2s\", duration: \"4.5s\" },\n  { left: \"75%\", top: \"80%\", delay: \"0.5s\", duration: \"3s\" },\n  { left: \"25%\", top: \"70%\", delay: \"1.5s\", duration: \"4s\" },\n  { left: \"65%\", top: \"30%\", delay: \"2.5s\", duration: \"3.8s\" },\n  { left: \"35%\", top: \"50%\", delay: \"0.8s\", duration: \"4.2s\" },\n  { left: \"10%\", top: \"90%\", delay: \"1.8s\", duration: \"3.3s\" },\n];\n\nexport default function Home() {\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) {\n    // Return a simple loading state to avoid hydration mismatch\n    return (\n      <main className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_50%_50%,rgba(147,51,234,0.1),transparent_50%)]\" />\n\n        <div className=\"relative z-10 p-8 flex items-center justify-center min-h-screen\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-purple-400 mx-auto\"></div>\n            <p className=\"text-purple-300 mt-4\">Loading CrissBot...</p>\n          </div>\n        </div>\n      </main>\n    );\n  }\n\n  return (\n    <main className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 relative overflow-hidden\">\n      {/* Background gradient overlay */}\n      <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_50%_50%,rgba(147,51,234,0.1),transparent_50%)]\" />\n\n      {/* Floating particles with fixed positions */}\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        {FIXED_PARTICLES.map((particle, index) => (\n          <div\n            key={index}\n            className=\"absolute w-1 h-1 bg-purple-400/30 rounded-full animate-float\"\n            style={{\n              left: particle.left,\n              top: particle.top,\n              animationDelay: particle.delay,\n              animationDuration: particle.duration,\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Main content */}\n      <div className=\"relative z-10 p-8\">\n        <TaskDisplay />\n      </div>\n\n      {/* Additional floating elements */}\n      <div className=\"absolute top-20 left-20 w-32 h-32 bg-purple-500/10 rounded-full blur-xl animate-pulse\" />\n      <div className=\"absolute bottom-20 right-20 w-40 h-40 bg-blue-500/10 rounded-full blur-xl animate-pulse delay-1000\" />\n\n      {/* Subtle grid pattern */}\n      <div\n        className=\"absolute inset-0 opacity-[0.02]\"\n        style={{\n          backgroundImage:\n            \"radial-gradient(circle at 1px 1px, rgba(255,255,255,0.3) 1px, transparent 0)\",\n          backgroundSize: \"50px 50px\",\n        }}\n      />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,8CAA8C;AAC9C,MAAM,kBAAkB;IACtB;QAAE,MAAM;QAAO,KAAK;QAAO,OAAO;QAAM,UAAU;IAAK;IACvD;QAAE,MAAM;QAAO,KAAK;QAAO,OAAO;QAAM,UAAU;IAAO;IACzD;QAAE,MAAM;QAAO,KAAK;QAAO,OAAO;QAAM,UAAU;IAAO;IACzD;QAAE,MAAM;QAAO,KAAK;QAAO,OAAO;QAAQ,UAAU;IAAK;IACzD;QAAE,MAAM;QAAO,KAAK;QAAO,OAAO;QAAQ,UAAU;IAAK;IACzD;QAAE,MAAM;QAAO,KAAK;QAAO,OAAO;QAAQ,UAAU;IAAO;IAC3D;QAAE,MAAM;QAAO,KAAK;QAAO,OAAO;QAAQ,UAAU;IAAO;IAC3D;QAAE,MAAM;QAAO,KAAK;QAAO,OAAO;QAAQ,UAAU;IAAO;CAC5D;AAEc,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG,EAAE;IAEL,IAAI,CAAC,SAAS;QACZ,4DAA4D;QAC5D,qBACE,8OAAC;YAAK,WAAU;;8BACd,8OAAC;oBAAI,WAAU;;;;;;8BAEf,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAE,WAAU;0CAAuB;;;;;;;;;;;;;;;;;;;;;;;IAK9C;IAEA,qBACE,8OAAC;QAAK,WAAU;;0BAEd,8OAAC;gBAAI,WAAU;;;;;;0BAGf,8OAAC;gBAAI,WAAU;0BACZ,gBAAgB,GAAG,CAAC,CAAC,UAAU,sBAC9B,8OAAC;wBAEC,WAAU;wBACV,OAAO;4BACL,MAAM,SAAS,IAAI;4BACnB,KAAK,SAAS,GAAG;4BACjB,gBAAgB,SAAS,KAAK;4BAC9B,mBAAmB,SAAS,QAAQ;wBACtC;uBAPK;;;;;;;;;;0BAaX,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,iIAAA,CAAA,cAAW;;;;;;;;;;0BAId,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;0BAGf,8OAAC;gBACC,WAAU;gBACV,OAAO;oBACL,iBACE;oBACF,gBAAgB;gBAClB;;;;;;;;;;;;AAIR","debugId":null}}]
}